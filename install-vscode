#!/usr/bin/env python
from os import remove as rm
from os.path import basename, expanduser
from shutil import copytree, ignore_patterns
from tempfile import TemporaryDirectory
import subprocess as sp
import sys

import requests

URL_PREFIX = 'https://packages.microsoft.com/repos/vscode'
DESKTOP_FILES = (expanduser('~/.local/share/applications/code.desktop'),
                 expanduser('~/.local/share/applications/code-url-handler.desktop'))


def main() -> int:
    if sys.platform != 'linux':
        print('This script is only for Linux', file=sys.stderr)
        return 1
    print('Determining deb filename', file=sys.stderr)
    pool_path = [
        link for link in requests.get(f'{URL_PREFIX}/dists/stable/main/binary-amd64/Packages',
                                      timeout=30).text.split('\n') if link.startswith('Filename: ')
    ][0].split(' ')[1]
    deb_file = basename(pool_path)
    try:
        with open(deb_file, 'rb'):
            pass
    except FileNotFoundError:
        print('Downloading deb file ...', file=sys.stderr)
        with open(deb_file, 'wb+') as f:
            chunk: bytes
            for chunk in requests.get(f'{URL_PREFIX}/{pool_path}', stream=True,
                                      timeout=30).iter_content(chunk_size=1024):
                f.write(chunk)
    with TemporaryDirectory(prefix='install-vscode-') as path_tempdir:
        sp.run(('dpkg-deb', '-x', deb_file, path_tempdir), check=True)
        print(f'cp -R {path_tempdir}/usr/share ~/.local/share')
        copytree(f'{path_tempdir}/usr/share',
                 expanduser('~/.local/share'),
                 ignore=ignore_patterns('zsh'),
                 dirs_exist_ok=True,
                 symlinks=True)
        rm(deb_file)
        print('Fixing desktop files', file=sys.stderr)
        for desktop_file in DESKTOP_FILES:
            lines = []
            with open(desktop_file) as f:
                for line in f.readlines():
                    if '/usr/share' in line:
                        lines.append(line.replace('/usr/share', expanduser('~/.local/share')))
                    else:
                        lines.append(line)
            with open(desktop_file, 'w') as f:
                for line in lines:
                    f.write(line)
        sp.run(('update-desktop-database', expanduser('~/.local/share/applications/')), check=True)
    return 0


if __name__ == '__main__':
    sys.exit(main())
